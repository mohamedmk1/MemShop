// <auto-generated />
using MemShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MemShop.Data.Migrations
{
    [DbContext(typeof(MemShopDbContext))]
    [Migration("20210729151735_CreateCustomer")]
    partial class CreateCustomer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MemShop.Domain.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MemShop.Domain.Customers.CustomerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "30% discount and gain 100 loyalty points",
                            Label = "Gold"
                        },
                        new
                        {
                            Id = 2,
                            Description = "20% discount and gain 20 loyalty points",
                            Label = "Student"
                        },
                        new
                        {
                            Id = 3,
                            Description = "25% discount and gain 30 loyalty points",
                            Label = "Senior"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Anonymous"
                        });
                });

            modelBuilder.Entity("MemShop.Domain.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "desc1",
                            Image = "image01.png",
                            Label = "Product 1",
                            Price = 13.449999999999999,
                            ProviderId = 1,
                            Reference = "ref01"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "desc2",
                            Image = "image02.png",
                            Label = "Product 2",
                            Price = 18.550000000000001,
                            ProviderId = 2,
                            Reference = "ref02"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "desc3",
                            Image = "image03.png",
                            Label = "Product 3",
                            Price = 20.254999999999999,
                            ProviderId = 1,
                            Reference = "ref03"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "desc4",
                            Image = "image04.png",
                            Label = "Product 4",
                            Price = 16.25,
                            ProviderId = 2,
                            Reference = "ref04"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "desc5",
                            Image = "image05.png",
                            Label = "Product 5",
                            Price = 25.649999999999999,
                            ProviderId = 1,
                            Reference = "ref05"
                        });
                });

            modelBuilder.Entity("MemShop.Domain.Products.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Desc Category 1",
                            Label = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Desc Category 2",
                            Label = "Category 2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Desc Category 3",
                            Label = "Category 3"
                        });
                });

            modelBuilder.Entity("MemShop.Domain.Providers.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "29 Rue des sablons",
                            Country = "France",
                            Name = "Provider 1",
                            ZipCode = "75016"
                        },
                        new
                        {
                            Id = 2,
                            Address = "606 rue Cathcart",
                            Country = "Canada",
                            Name = "Provider 2",
                            ZipCode = "66666"
                        });
                });

            modelBuilder.Entity("MemShop.Domain.Customers.Customer", b =>
                {
                    b.HasOne("MemShop.Domain.Customers.CustomerType", "CustomerType")
                        .WithMany("Customers")
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("MemShop.Domain.Products.Product", b =>
                {
                    b.HasOne("MemShop.Domain.Products.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemShop.Domain.Providers.Provider", "Provider")
                        .WithMany("Products")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("MemShop.Domain.Customers.CustomerType", b =>
                {
                    b.Navigation("Customers");
                });

            modelBuilder.Entity("MemShop.Domain.Products.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("MemShop.Domain.Providers.Provider", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
